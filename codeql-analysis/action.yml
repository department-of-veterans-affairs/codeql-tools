name: CodeQL
description: GitHub Advanced Security Code Scanning with CodeQL
inputs:
  build_step_name:
    description: Name of the build step to invoke
    required: false
  language:
    description: Language to analyze
    required: true
  token:
    description: GitHub token
    required: true
  upload_db:
    description: Upload the CodeQL database to GitHub
    required: false
    default: false
runs:
  using: composite
  steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Initialize CodeQL
      uses: github/codeql-action/init@v2
      with:
        languages: ${{ inputs.language }}
        queries: security-and-quality

    - name: Parse Build Steps
      id: build-steps
      uses: department-of-veterans-affairs/codeql-tools/parse-build-steps@main
      with:
        build_step_name: ${{ inputs.build_step_name }}
        language: ${{ inputs.language }}
        temp: ${{ runner.temp }}

    - name: Build Source
      if: steps.build-steps.outputs.result != '' && runner.os != 'Windows'
      shell: bash
      run: |
        eval "$build_steps"
      env:
        build_steps: ${{ steps.build-steps.outputs.result }}

    - name: Build Source
      if: steps.build-steps.outputs.result != '' && runner.os == 'Windows'
      shell: powershell
      run: |
        $BuildSteps = "$Env:build_steps"
        Invoke-Expression "$BuildSteps"
      env:
        build_steps: ${{ steps.build-steps.outputs.result }}

    - name: Auto-Build Source
      if: steps.build-steps.outputs.result == ''
      uses: github/codeql-action/autobuild@v2

    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v2

    - name: Generate CodeQL Results CSV
      if: runner.os == 'Linux'
      shell: bash
      run: |
        if [[ ! -v codeql ]]; then
          $(realpath /opt/hostedtoolcache/CodeQL/*/x64/codeql/codeql | head -n 1) database interpret-results $path --format=csv --output="$temp/codeql-scan-results.csv"
        else
          codeql database interpret-results $path --format=csv --output="$temp/codeql-scan-results.csv"
        fi
      env:
        path: ${{ runner.temp }}/codeql_databases/${{ inputs.language }}
        temp: ${{ runner.temp }}

    - name: Generate CodeQL Results CSV
      if: runner.os == 'Windows'
      shell: powershell
      run: |
        $Language = "$Env:language"
        $Path = "$Env:path"
        $Temp = "$Env:temp"
        $CSVPath = "$Temp\codeql-scan-results.csv"
        if (Get-Command codeql -errorAction SilentlyContinue) {
          codeql database interpret-results $Path --format=csv --output="$CSVPath"
        } else {
          $CodeQLCommand = "$((Get-ChildItem C:\hostedtoolcache\windows\CodeQL\*\x64\codeql\codeql.exe).fullname | Select-Object -first 1)"
          Invoke-Expression "$CodeQLCommand database interpret-results $Path --format=csv --output='$CSVPath'"
        }
      env:
        path: ${{ runner.temp }}/codeql_databases/${{ inputs.language }}
        temp: ${{ runner.temp }}

    - name: Upload Artifact
      uses: actions/upload-artifact@v3
      with:
        name: codeql-scan-results
        path: ${{ runner.temp }}/codeql-scan-results.csv

    - name: Upload CodeQL Database
      if: inputs.upload_db == 'true'
      uses: department-of-veterans-affairs/codeql-tools/upload-database@main
      with:
        language: ${{ inputs.language }}
        org: ${{ github.event.repository.owner.login }}
        path: ${{ runner.temp }}/codeql_databases/${{ inputs.language }}
        repo: ${{ github.event.repository.name }}
        token: ${{ inputs.token }}
