name: CodeQL
description: GitHub Advanced Security Code Scanning with CodeQL
inputs:
  allowlist_credentials:
    description: GitHub app credentials for allowlist repo
    required: false
  build_step_name:
    description: Name of the build step to invoke
    required: false
  config:
    description: CodeQL configuration YAML
    required: false
    default: ''
  debug:
    description: Enable debug logging
    required: false
    default: 'false'
  language:
    description: Language to analyze
    required: true
  path:
    description: The path to the working directory
    required: false
    default: '.'
  token:
    description: GitHub token
    required: true
  upload_db:
    description: Upload the CodeQL database to GitHub
    required: false
    default: 'false'
runs:
  using: composite
  steps:
    - name: Validate Monorepo Access
      if: inputs.config != ''
      uses: department-of-veterans-affairs/codeql-tools/validate-monorepo-access@main
      with:
        allowlist_credentials: ${{ inputs.allowlist_credentials }}
        allowlist_path: 'csgp-monorepo-allowlist.yml'
        allowlist_repo: '.github-internal'
        org: ${{ github.event.organization.login }}
        repo: ${{ github.event.repository.name }}

    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Validate emass.json
      if: runner.os != 'Windows'
      shell: bash
      run: |
        json_file=".github/emass.json"
        
        echo "Validating emass.json"
        if [ ! -f "$json_file" ]; then
          echo "Error: emass.json not found, please refer to the OIS documentation on creating the emass.json file"
          exit 1
        fi
        
        output=$(jq '.' "$json_file" 2> /dev/null)
        if [ $? -ne 0 ]; then
          echo "Error: malformed emass.json file, please refer to the OIS documentation on creating the emass.json file"
          exit 4
        fi

    - name: Validate emass.json
      if: runner.os == 'Windows'
      shell: powershell
      run: |
        $json_file = ".github\emass.json"
        
        Write-Output "Validating .github\emass.json"
        if (!(Test-Path $json_file)) {
          Write-Output "Error: .github\emass.json not found, please refer to the OIS documentation on creating the emass.json file"
          Exit 1
        }
        $output = Get-Content $json_file -Raw -ErrorAction SilentlyContinue | ConvertFrom-Json
        if (!$?) {
          Write-Output "Error: malformed emass.json file, please refer to the OIS documentation on creating the emass.json file"
          Exit 4
        }

    - name: Initialize CodeQL
      uses: github/codeql-action/init@v2
      with:
        config: ${{ inputs.config }}
        debug: ${{ inputs.debug }}
        languages: ${{ inputs.language }}
        queries: security-and-quality

    - name: Parse Build Steps
      id: build-steps
      uses: department-of-veterans-affairs/codeql-tools/parse-build-steps@main
      with:
        build_step_name: ${{ inputs.build_step_name }}
        language: ${{ inputs.language }}

    - name: Build Source
      if: steps.build-steps.outputs.result != '' && runner.os != 'Windows'
      shell: bash
      run: |
        eval "$build_steps"
      working-directory: ${{ inputs.path }}
      env:
        build_steps: ${{ steps.build-steps.outputs.result }}

    - name: Build Source
      if: steps.build-steps.outputs.result != '' && runner.os == 'Windows'
      shell: powershell
      run: |
        $BuildSteps = "$Env:build_steps"
        Invoke-Expression "$BuildSteps"
      working-directory: ${{ inputs.path }}
      env:
        build_steps: ${{ steps.build-steps.outputs.result }}

    - name: Auto-Build Source
      if: steps.build-steps.outputs.result == ''
      uses: github/codeql-action/autobuild@v2
      with:
        working-directory: ${{ inputs.path }}

    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v2
      with:
        category: ois-${{ inputs.language }}

    - name: Generate CodeQL Results CSV
      if: runner.os != 'Windows'
      shell: bash
      run: |
        database_path="$temp/codeql-scan-results-$language.csv"
        echo "Generating CodeQL Results CSV at $database_path"
        if [[ ! -v codeql ]]; then
          $(realpath $RUNNER_TOOL_CACHE/CodeQL/*/x64/codeql/codeql | head -n 1) database interpret-results $database --format=csv --output="$database_path"
        else
          codeql database interpret-results $database --format=csv --output="$database_path"
        fi
      env:
        language: ${{ inputs.language }}
        database: ${{ runner.temp }}/codeql_databases/${{ inputs.language }}
        qlpacks: 'codeql/${{ inputs.language }}-queries:codeql-suites/${{ inputs.language }}-security-and-quality'
        temp: ${{ runner.temp }}

    - name: Generate CodeQL Results CSV
      if: runner.os == 'Windows'
      shell: powershell
      run: |
        $Language = "$Env:language"
        $DatabasePath = "$Env:database"
        $Temp = "$Env:temp"
        $CSVPath = "$Temp\codeql-scan-results-$Language.csv"
        Write-Output "Generating CodeQL Results CSV at $CSVPath"
        if (Get-Command codeql -errorAction SilentlyContinue) {
          codeql database interpret-results "$DatabasePath" --format=csv --output="$CSVPath"
        } else {
          $CodeQLCommand = "$((Get-ChildItem $Env:RUNNER_TOOL_CACHE\CodeQL\*\x64\codeql\codeql.exe).fullname | Select-Object -first 1)"
          & $CodeQLCommand database interpret-results "$DatabasePath" --format=csv --output="$CSVPath"
        }
      env:
        language: ${{ inputs.language }}
        database: ${{ runner.temp }}\codeql_databases\${{ inputs.language }}
        temp: ${{ runner.temp }}

    - name: Upload Artifact
      if: runner.os != 'Windows'
      uses: actions/upload-artifact@v3
      with:
        name: codeql-scan-results-${{ inputs.language }}
        path: ${{ runner.temp }}/codeql-scan-results-${{ inputs.language }}.csv

    - name: Upload Artifact
      if: runner.os == 'Windows'
      uses: actions/upload-artifact@v3
      with:
        name: codeql-scan-results-${{ inputs.language }}
        path: ${{ runner.temp }}\codeql-scan-results-${{ inputs.language }}.csv

    - name: Upload CodeQL Database
      if: inputs.upload_db == 'true' && runner.os != 'Windows'
      uses: department-of-veterans-affairs/codeql-tools/upload-database@main
      with:
        language: ${{ inputs.language }}
        org: ${{ github.event.repository.owner.login }}
        path: ${{ runner.temp }}/codeql_databases/${{ inputs.language }}
        repo: ${{ github.event.repository.name }}
        token: ${{ inputs.token }}

    - name: Upload CodeQL Database
      if: inputs.upload_db == 'true' && runner.os == 'Windows'
      uses: department-of-veterans-affairs/codeql-tools/upload-database@main
      with:
        language: ${{ inputs.language }}
        org: ${{ github.event.repository.owner.login }}
        path: ${{ runner.temp }}/codeql_databases/${{ inputs.language }}
        repo: ${{ github.event.repository.name }}
        token: ${{ inputs.token }}
